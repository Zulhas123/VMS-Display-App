<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GGOMMcaYgvH/AF9Lm2BgO2YAAAAASUVORK5CYII=
</value>
  </data>
</root>